{"autoexec":"\njs: outputbox.style.fontSize=\"1em\"\nlist\n","better ed":"--- marker ---\n\n\\ [ ] style does not work correctly as anticipated\n\n    \\ Maintain source code in HTML5 local storage directly\n\n    s\" ls.f\"        source-code-header\n    \n    : (eb.parent) ( node -- eb ) \\ Get the parent edit box object of the given node/element.\n        js> $(pop()).parents('.eb')[0] ( eb ) ;\n\n    : eb.edit ( btn -- ) \\ Make the textarea and the name editable.\n        (eb.parent) ( eb ) \\ The input object can be any node of the editbox.\n        \\ js: $('.ebname',tos())[0].contentEditable=true\n        js: $('textarea',pop())[0].readOnly=false ;\n        \n    : eb.readonly ( btn -- ) \\  Make the textarea and the name read-only.\n        (eb.parent) ( eb ) \\ The input object can be any node of the editbox.\n        \\ js: $('.ebname',tos())[0].contentEditable=false\n        js: $('textarea',pop())[0].readOnly=true ;\n\n    : eb.save ( btn -- ) \\ Save the textarea to localStorate[name].\n        (eb.parent) ( eb ) \\ The input object can be any node of the editbox.\n        js> $('.ebname',tos())[0].value trim ( eb name )\n        js> $('textarea',tos(1))[0].value ( eb name text )\n        js: storage.set(pop(1),pop()) ( eb )\n        js: $('.ebsave',pop())[0].value=\"Saved\" ;\n        \n    : (eb.read) ( eb field_name -- ) \\  Read the localStorate[name] to textarea of the given edit box.\n        js> storage.get(tos())  ( eb name text|undefined ) \n        js> tos()==undefined if  ( eb name text|undefined ) \n            <js> alert(\"Error! can't find '\" + pop(1) + \"' in local storage.\")</js>\n            2drop exit\n        then  nip ( eb text )\n        js> $('.ebsave',tos(1))[0].value==\"Save\" if  ( eb text )\n            <js> confirm(\"Unsaved local storage edit box will be overwritten, are you sure?\") </jsV> \n            if else 2drop exit then\n        then  ( eb text )\n        js: $('textarea',tos(1))[0].value=pop()\n        js: $('.ebsave',pop())[0].value=\"Saved\" ;\n    \n    : eb.read ( btn -- ) \\ Read the localStorate[name] to textarea.\n        (eb.parent) ( eb ) \\ The input object can be any node of the editbox.\n        js> $('.ebname',tos())[0].value trim ( eb name ) (eb.read) ;\n        \n    : eb.close ( btn -- ) \\ Close the local storage edit box to stop editing.\n        (eb.parent) ( eb ) \\ The input object can be any node of the editbox.\n        js> $('.ebsave',tos())[0].value==\"Save\" if \n            <js> confirm(\"Are you sure you want to clsoe the unsaved local storage edit box?\") </jsV> \n            if else exit then\n        then ( eb ) removeElement ;\n\n    : eb.delete ( btn -- ) \\ Delete the local storage edit box and the local storage field.\n        (eb.parent) ( eb ) \\ The input object can be any node of the editbox.\n        <js> $('textarea',tos())[0].value.indexOf(\"delete me no regret\")!=0</jsV>\n        if <js> alert('Place \"delete me no regret\" at the very beginning of the textarea to demonstrate yor guts.') </js> drop exit then\n        js> $('.ebname',tos())[0].value trim ( eb name ) \n        js: storage.del(pop()) ( eb ) removeElement ;\n\n    : eb.run ( btn -- ) \\ Run FORTH source code of the local storage edit box.\n        (eb.parent) ( eb ) \\ The input object can be any node of the editbox.\n        js: dictate($('textarea',pop())[0].value) ;\n        \n    : eb.onchange ( btn -- ) \\ Event handler on local storage edit box has changed\n        (eb.parent) ( eb ) \\ The input object can be any node of the editbox.\n        <js> $(\".ebsave\",pop())[0].value=\"Don't forget to SAVE !\"</js> ;\n\n    : init-buttons ( eb -- eb ) \\ Initialize buttons of the local storage edit box.\n        <js> $(\".ebsave\",    tos())[0].onclick =function(e){push(this);execute(\"eb.save\");    return(false)}</js>\n        <js> $(\".ebread\",    tos())[0].onclick =function(e){push(this);execute(\"eb.read\");    return(false)}</js>\n        <js> $(\".ebedit\",    tos())[0].onclick =function(e){push(this);execute(\"eb.edit\");    return(false)}</js>\n        <js> $(\".ebreadonly\",tos())[0].onclick =function(e){push(this);execute(\"eb.readonly\");return(false)}</js>\n        <js> $(\".ebclose\",   tos())[0].onclick =function(e){push(this);execute(\"eb.close\");   return(false)}</js>\n        <js> $(\".ebrun\",     tos())[0].onclick =function(e){push(this);execute(\"eb.run\");     return(false)}</js> \n        <js> $(\".ebdelete\",  tos())[0].onclick =function(e){push(this);execute(\"eb.delete\");  return(false)}</js> \n        <js> $(\".ebtextarea\",tos())[0].onchange=function(e){push(this);execute(\"eb.onchange\");return(false)}</js> \n        <js> \n            $(\".ebtextarea\",tos())[0].onkeydown = function(e) {\n                e = (e) ? e : event; \n                var keycode = (e.keyCode) ? e.keyCode : (e.which) ? e.which : false;\n                switch(keycode) {\n                    case  83: /* s */\n                        if (e&&e.ctrlKey) {\n                            push(this); // ( textarea ) \n                            execute(\"eb.save\");\n                            var temp=this.value;this.value=\"\";this.value=temp; // Saved already so clear the onchange status\n                            e.stopPropagation ? e.stopPropagation() : (e.cancelBubble=true); // stop bubbling\n                            return(false);\n                        }\n                    default: return (true); // pass down to following handlers\n                }\n            }\n        </js> ;\n\n    : (ed2) ( -- edit_box_element ) \\ Create an HTML5 local storage edit box in outputbox\n        <text>\n            <div class=eb>\n            <style type=\"text/css\">\n                .eb .box { \n                    width:90%;\n                    border:1px solid black;\n                }\n                .eb p {\n                    display:inline;\n                }\n                .eb textarea {\n                    style=\"margin-top:1em;\" \n                }\n            </style>\n            <div class=box>\n            <p>Local Storage Field </p>\n            <input class=ebname type=text value=\"\"></input>\n            <p>\n            <input type=button value='Saved' class=ebsave>\n            <input type=button value='Read' class=ebread>\n            <input type=button value='Edit' class=ebedit>\n            <input type=button value='Delete' class=ebdelete>\n            <input type=button value='Read only' class=ebreadonly>\n            <input type=button value='Close' class=ebclose>\n            <input type=button value='Run' class=ebrun>\n            </p>\n            <textarea class=ebtextarea rows=20 wrap=\"off\"></textarea>\n        </div></div></text>\n        </o> ( eb ) js: window.scrollTo(0,tos().offsetTop-50) ( eb )\n        init-buttons ;\n    \n    : ed2 (ed2) drop ; // ( -- ) Create an HTML5 local storage edit box in outputbox\n\nstop\n\njs> $(\"input\",$(\".eb\")[1])[0].value . \\ the input type=text field name \naaa bbb ccc  OK \n\n\\ [x] ed move to above outputbox\n\\ js> $(\".eb\").length \\ ==> 1 OK \njs> $(\".eb\")[0] js> outputbox insertBefore\n\nstop    \n<o> <input type=file></input></o> tib. \\ Choose a file from local computer\n<o> <input type=checkbox></input></o> tib. \\ A toggling check box\n<o> <input type=hidden></input></o> tib. \\ 看不出甚麼東西\n<o> <input type=image></input></o> tib. \\ Image, what image?\n<o> <input type=password></input></o> tib. \\ It's a text input box\n<o> <input type=radio></input></o> tib. \\ Radio button expected\n<o> <input type=reset></input></o> tib. \\ Reset button\n<o> <input type=submit></input></o> tib. \\ Submit button\n<o> <input type=text></input></o> tib. \\ 類似 textarea or password 的 text box\n\n\n","":"111  sdfsdf sfsfsdf  sdsffsf ss ","test":"<h3> header 333333<h3>"}