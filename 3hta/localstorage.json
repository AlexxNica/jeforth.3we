{"autoexec":"{\"doc\":\"\\njs: outputbox.style.fontSize=\\\"1.5em\\\"\\n\\njs> vm.appname char jeforth.3hta = [if] [else]\\n    .( Launch the briefing ) cr\\n    <o> <iframe name=\\\"An introduction to jeforth.3ce\\\" width=\\\"96%\\\" height=\\\"1000\\\" align=\\\"center\\\" src=\\\"http://note.youdao.com/share/?id=79f8bd1b7d0a6174ff52e700dbadd1b2&amp;type=note\\\" frameBorder=\\\"1\\\" marginWidth=\\\"1\\\" marginHeight=\\\"1\\\" scrolling=\\\"Yes\\\"> </iframe></o> drop\\n    cr cr \\n[then]\\n\\n.( Execute the 'list' command that lists all local storage fields ) cr\\nlist\\n\",\"mode\":true,\"readonly\":false}","Log 2016/4/8":"{\"doc\":\"[x] HTA can open only one window, don't know why. Use that one anyway.\\n[ ] improve (export) , it's ok now but ugly.\\n    Use local-storage-field-editable? to improve it.\\n\\nstop\\neb.open check it out, if ok, go on, if not, JSON.stringify() can make it a string and show.\\nand by the way make it a readonly.\\n[ ] how about an array? field is array and stringify is ok.\\n\\nstop\\n--- marker --- dropall cls \\n: local-storage-field-editable? ( name -- field boolean ) \\\\ Check if the object is a local storage editable document\\n    js> storage.get(pop()) >r \\n    js> typeof(rtos())==\\\"object\\\" if\\n      js> typeof(rtos().doc)==\\\"string\\\"\\n      js> typeof(rtos().mode)==\\\"boolean\\\"\\n      js> typeof(rtos().readonly)==\\\"boolean\\\"\\n      and and ( boolean )\\n    else \\n      false ( boolean )\\n    then r> swap ;\\nchar autoexec local-storage-field-editable? .s\\nstop\\n\\n--- marker --- dropall cls \\n: local-storage-field-editable? ( name -- field boolean ) \\\\ Check if the object is a local storage editable document\\n    js> storage.get(pop()) ( field ) \\n    js> typeof(tos())==\\\"object\\\" if\\n      js> typeof(tos().doc)==\\\"string\\\"  ( field boolean ) \\n      js> typeof(tos(1).mode)==\\\"boolean\\\"  ( field boolean boolean ) \\n      js> typeof(tos(2).readonly)==\\\"boolean\\\"  ( field boolean boolean boolean )  \\n      and and ( field boolean )\\n    else \\n      false ( field boolean )\\n    then ;\\nchar x local-storage-field-editable? .s\\nstop\\njs> storage.get(\\\"autoexec\\\") js> typeof(pop()==\\\"object\\\") . \\nstop \\n\\njs: storage.set(\\\"x\\\",{aa:11})\\njs: storage.set(\\\"y\\\",\\\"我的大好是天\\\")\\njs: storage.set(\\\"z\\\",[\\\"aa\\\",123,\\\"bb\\\"])\\n\\nstop\\njs> storage.get(\\\"autoexec\\\") js> typeof(tos().doc)==\\\"string\\\"&&typeof(tos().mode)==\\\"boolean\\\"&&typeof(tos().readonly)==\\\"boolean\\\" .\\n\\n\\nstop\\n\\n[x] I twisted the ls.f to bring in the older code into new eb format of \\n    doc,readonly,mode and it works for autoexec but can't edit unless \\n    after saved!!?? --> fixed, haha bug.\\n\\n[x] The problem of local storage edit box lose the focus to inputbox has fixed.\\n    I already have a treatment in forthConsoleHandler() for Ctrl-Enter to NOT focus on \\n    to inputbox after running a TIB. So, simply do inputbox.blur() has solved the \\n    problem. -- 2016/4/29 13:51\\n\\n[ ] optimize [x]platform.f ls.f and editor.f\\n\\n<br><br>\\n[ ] Local storage fields may not edit box document. How to avoid them from being opened by\\n    edit box? \\n    An edit box document is a local storage field that has \\n    {<strong>doc</strong>,<strong>readonly</strong>,<strong>mode</strong>} fields.\\n    So this is enough to tell.\\n\\n<br><br>\\n[x] Move older log to local storage.\\n\\n<br><br>\\n[ ] what if local storage usage become huge? An archive method is needed.\\n\\n<br><br>\\n[ ] check HTML li il or something else that support \\\"[ ]\\\" and indent.\\n\\n\\n<br><br>\\n[ ] let <e> support comments but be careful, ... no no problem.\\n\\n<br><br>\\n[ ] Ctrl-s 竟然會自動補上 HTML closing tag !! \\n    --> it seems like editor.f's Ctrl-S.\\n\\n<br><br>\\n[ ] GitHub read me should feature the published 3ce Chrome extension.\\n\\n[ ] let ed command take the field name, makes list easier too.\\nhhhh\\n\",\"mode\":true,\"readonly\":false}","x":"{\"aa\":11}","y":"我的大好是天","z":"[\"aa\",123,\"bb\"]"}