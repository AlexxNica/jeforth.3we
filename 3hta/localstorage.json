{"autoexec":"{\"name\":\"autoexec\",\"readonly\":false,\"codemode\":\"true\",\"doc\":\"\\njs> vm.appname==\\\"jeforth.3hta\\\" [if] s\\\" font-size for X1 Yoga 3HTA\\\" (run) [then]\\n\\n<comment>\\njs: outputbox.style.fontSize=\\\"1.5em\\\"\\ncr .( Launch the briefing ) cr\\n<o> <iframe src=\\\"http://note.youdao.com/share/?id=79f8bd1b7d0a6174ff52e700dbadd1b2&type=note\\\"\\nname=\\\"An introduction to jeforth.3ce\\\" align=\\\"center\\\" width=\\\"96%\\\" height=\\\"1000px\\\"\\nmarginwidth=\\\"1\\\" marginheight=\\\"1\\\" frameborder=\\\"1\\\" scrolling=\\\"Yes\\\"> </iframe></o> drop\\ncr cr \\n.( execute the 'list' command ) cr\\nlist\\n</comment>\",\"mode\":true}","Play with numeric.js":"{\"doc\":\"\\ncls \\n\\\\ Linear algebra example. We start with a matrix.\\n<js>\\nvar A = [[1,2,3],\\n         [4,5,6],\\n         [7,3,9]]; A </jsV> value A\\n\\n\\\\ Let's also make a vector.\\n<js> var x = [3,1,2]; x </jsV> value x\\n\\n\\\\ Matrix-vector product.  b = A (.) x\\n<js> var b = numeric.dot(vm.g.A,vm.g.x); b </jsV> value b b (see)\\n\\n\\\\ Matrix inverse.  ~A \\n<js> var Ainv = numeric.inv(vm.g.A); Ainv </jsV> value Ainv \\nAinv (see)\\n\\n\\\\ Let's check it:   ~A (.) b = x Bingo!!!!\\n<js> numeric.dot(vm.g.Ainv,vm.g.b); </jsV> (see)\\n\\n\\\\ Determinant\\n<js> numeric.det(vm.g.A); </jsV> cr tib. \\n\\n\\\\ Sin wave\\n<js> var x = numeric.linspace(0,6.3,25); x </jsV> to x x (see)\\n\\n<js> var y = numeric.sin(vm.g.x); y </jsV> value y y (see)\\n\\n\\n\\n\\nstop\\njs> numeric tib.\\n\\nstop\\njs> vm.appname==\\\"jeforth.3hta\\\" [if] char js/numeric-1.2.6.js\\n[else] char http://www.numericjs.com/lib/numeric-1.2.6.js [then]\\nreadTextFile \\\\ 先讀取 .js 檔, 但不能直接用\\n<text> \\nwindow.numeric = numeric;  // 先對 source 做一點必要的加工, 把 numeric 掛上 global \\n</text> + </js> \\\\ 然後才執行\\t\\n\\nstop\\n\\\\ Also hosted on BootCDN.cn\\n\\\\ http://cdn.bootcss.com/numeric/1.2.6/numeric.js\\n\\n\\\\ These lines works fine! Test ok on 3ce, 3hta ADO reads only local files\\n\\\\ so the path should be only \\\"js/numeric-1.2.6.js\\\",\\n\\nchar     http://localhost:8888/js/numeric-1.2.6.js     readTextFile tib.\\nchar http://www.numericjs.com/lib/numeric-1.2.6.js     readTextFile tib.\\nchar http://www.numericjs.com/lib/numeric-1.2.6.min.js readTextFile tib.\\n\\n\\n\",\"mode\":true,\"readonly\":false}","Log 2016-06-12 10:14:38":"{\"doc\":\"[x] ls.f should reveal the local storage format --> ed command is the hint also\\n    eb.read eb.save commands.\\n\\n[x] 舊筆記 : \\\"ls.f (ed) 要改成 ( hash \\\"fieldname\\\" -- ) <-- No, 已經牽連太深了。 ls.dump 另外做介\\n    面而不引用 ed\\\" <---- 該介面叫做 view box 簡稱 vb 結果與 visual basic 太像了. (vb) vb.load 改名\\n    為 ls.viewBox ls.viewBoxLoad 比較好。\\n[x] ls.dump w/o following argument in TIB to list localStorage of all, because \\n    js> storage.all() virtualizes localStorage very well.\\n[x] (ls.dump) reads localstorage.json file directly now. Should break down to \\n    read-json ( filename -- jsonObj ) and (ls.dump) ( jsonObj filename -- )\\n\\n[x] 擴充 ls.dump 當隨後沒有給 filename 時就 dump localStorage <--- 3htm, 3ce 的需要改良\\n    所以 help 要加強\\n\\n[x] Study how to *write* files to local disk on super-chrome jeforth.3htm\\n    --> 先前有找到過一個例子, 可以把網頁上的 pictures drag-drop 一下就 save 成 local file\\n        Ynote: \\\"jeforth 研究 Chrome extension 存檔到本地 disk 的方法\\\" the thing is \\\"XMLHttpRequest\\\" \\n    --> Study XMLHttpRequest @ http://www.w3school.com.cn/xml/xml_http.asp\\n        <js> var x =new XMLHttpRequest(); x </jsV> constant xmlhttp // ( -- obj ) XMLHttpRequest object\\n        xmlhttp :: open(\\\"GET\\\",\\\"a.html\\\",true)\\n        xmlhttp :: send(null)\\n        try on 3hta ... error : access denied\\n        try on jeforth.3nw --> it works! \\n    --> See log on 3nw \\\"Study XMLHttpRequest object 2016-07-06\\\" \\n        XMLHttpRequest 可以 read 檔案, 但是 write 應該是靠 server 端做的吧! 那還不如用 3nw。\\n        [ ] 我以前研究過 Web server 端的程式 on 3nd, it's time to review.\\n    [/] 想要 write file 腳邊的目的是 sync 3htm 3ce 的 localstorage log. 3hta, 3nw 已經靠 GitHub\\n        做到這點了。既然是為了這個目的, 可以利用 Chrome browser 本有的 save 網頁功能, 如此只需 read \\n        local file 的能力就夠了, 3ce super_chrome 3htm 都可以, 那就解決了呀!\\n\\n[x] snapshot command does not capture textareas <-- bug!! \\n    Need to copy textarea.value into innerHTML\\n    --> (eb.read) 的 help 有紀錄，早就發現有這個問題了。現在腦子裡一點印象都沒有。\\n    --> textarea.value->innertext 是解決 textarea 的內容之問題。\\n    [x] try this: js> outputbox textarea.value->innertext snapshot <--- B i n g o ! ! \\n        --> so snapshot should use this solution.\\n        --> 早就有了, 但是寫錯了! 訂正 OK。\\n[/] stop() 是個 DOM 的 native code!! \\n[ ] Youtube presentation of numeric.js\\n[ ] 準備 release master 新版, search \\\"kvm.minor_version\\\"\\n    全部加 200 代表 GitHub master release 的版號。\\n    [x] jeforth.3nd.js --> version 2 -> 202\\n    [x] jeforth.3nw.html, /package.json -> version 22 -> 222\\n    [x] jeforth.3htm.js --> to be version 2 now -> 202\\n    [x] jeforth.3ce.js(3ce extension pages)-> 202\\n    [x] jeforth.3ce, ce.f(Target page) -> 202\\n    [x] jeforth.3ce, background.js -> 202\\n    [x] jeforth.hta --> <HTA> tag. to be version 3 now -> 203 \\n    [ ] GitHub read me should feature the published 3ce Chrome extension.\\n    [ ] README.md 上的 demo 也要改寫好一點。最好能有浮動 console3we 框。\\n        --> 先把結構改好, link 出去的內容先弄成 under constructing. 日起有功,穩步推進。\\n[ ] 利用 Chrome browser 本有的 save 網頁功能 save 3ce 3htm 的 localstorage.html\\n    --> study localstorage.html ... 結果所有的 textarea 都是空的, 要先這樣一下:\\n        <js> $(\\\"textarea\\\").each(function(){this.innerText = this.value})</js>\\n        就好了，可以 Ctrl-S 把所有內容都 save 成 ~.html 檔了。\\n    --> 1. read localstorage.html as a text file by readTextFile\\n        2. remove script, style, rename id=outputbox, id=inputbox by regular expression \\n            cls char c:\\\\Users\\\\hcche\\\\Downloads\\\\localstorage.html readTextFile\\n            remove-script-from-HTML remove-style-from-HTML\\n            :> replace(/id=\\\"inputbox\\\"/g,'id=\\\"input_box\\\"')\\n            :> replace(/id=\\\"outputbox\\\"/g,'id=\\\"output_box\\\"')\\n            :> replace(/id=\\\"endofinputbox\\\"/g,'id=\\\"endofinput_box\\\"')\\n            :> replace(/class=\\\"console3we\\\"/g,'class=\\\"ls_hash\\\"')\\n           這樣就搞定了。\\n        3. </o> the entire string and get the element object.\\n        4. start copy each of every view box to localstorage fields\\n            > js> $(\\\".ls_hash\\\").length tib. \\\\ ==> 1 OK \\n            > js> $(\\\".box\\\",$(\\\".ls_hash\\\")).length tib. \\\\ ==> 6 OK \\n            > js> $(\\\".vbpathname\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() tib. \\\\ ==> localStorage OK \\n            > js> $(\\\".vbpathname\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() \\\\ ==> localStorage (string)\\n            > js> $(\\\".vbfieldname\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() \\\\ ==> sourcecode (string)\\n            > js> $(\\\".vbtextarea\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() \\\\ ==> \\\\ \\\"jeforth.3ce 讀取「臺灣銀行」的「除權除息表」..\\n            > js> $(\\\".vbhtmlarea\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() \\\\ ==>  (string)\\n    [x] : read-ls.html ( \\\"pathname\\\" -- ObjJquery ) \\\\ Read localstorage.html\\n            readTextFile ( \\\"html\\\" )\\n            remove-script-from-HTML remove-style-from-HTML\\n            :> replace(/id=\\\"inputbox\\\"/g,'id=\\\"input_box\\\"')\\n            :> replace(/id=\\\"outputbox\\\"/g,'id=\\\"output_box\\\"')\\n            :> replace(/id=\\\"endofinputbox\\\"/g,'id=\\\"endofinput_box\\\"')\\n            :> replace(/class=\\\"console3we\\\"/g,'class=\\\"ls_hash\\\"')\\n            </o> ( obj ) \\\\ The entire localstorage.html in outputbox\\n            js> $(\\\".box\\\",$(\\\".ls_hash\\\")) ( array ) \\\\ array of field elements\\n            ; \\n            /// The entire localstorage.html will be shown on outputbox.\\n            /// The result is an jQuery of field elements\\n    [ ] fieldname \\n            js> $(\\\".ebname\\\",tos()[0]).attr(\\\"placeholder\\\") \\\\ ==> 台灣50評估 2016-07-03 買華碩吧 (string)\\n        doc\\n            > js> $(\\\".ebhtmlarea\\\",tos()[0])[0].innerHTML \\\\ if codemode is false\\n            > js> $(\\\".ebtextarea\\\",tos()[0])[0].value \\\\ if codemode is true\\n        readonly\\n            js> $(\\\".ebreadonlyflag\\\",tos()[0]).attr(\\\"flag\\\") \\\\ ==> false (string)\\n        codemode\\n            js> $(\\\".ebmodeflag\\\",tos()[0]).attr(\\\"flag\\\") \\\\ ==> false (string)\\n        : element>field ( element -- obj ) \\\\ Translate a local storage DOM element to object\\n            {} ( element obj ) <js>\\n            tos().name=$(\\\".ebname\\\",tos(1)).attr(\\\"placeholder\\\");\\n            tos().readonly=$(\\\".ebreadonlyflag\\\",tos(1)).attr(\\\"flag\\\");\\n            tos().codemode=$(\\\".ebmodeflag\\\",tos(1)).attr(\\\"flag\\\");\\n            if (tos().codemode==\\\"true\\\") tos().doc=$(\\\".ebtextarea\\\",tos(1)).value;\\n            else tos().doc=$(\\\".ebhtmlarea\\\",tos(1)).innerHTML;\\n            </js> nip ; /// 今天到這裡, 還不成功, don't know why . . .\\n    --> 轉戰到 3ce local storage log field 'lab' ... \\n\\n       \\n[x] 發現 ls.f edit box 的 style 每個 instance 都重複定義, 要處理嗎?\\n        <div class=\\\"vb\\\">\\n            <style type=\\\"text/css\\\">\\n                .vb .box { width:90%; }\\n                .vb .box, .vb .vbhtmlarea { border:1px solid black; }\\n                .vb p { display:inline; } \\n                .vb .vbname { font-size: 1.1em; }\\n            </style>\\n            <div class=\\\"box\\\">\\n        ...\\n    --> 我以前對 CSS style 的瞭解不太正確。以為用 class 限定的 style 要真有該 class 所以都把\\n        edit box 的 style 隨 edit box 重複定義於每個 instance 內。其實多此一舉。只要針對這種\\n        class 定義 style 一次即可， 用 <h> 可也。\\n \\n\\n[ ] why ls.f needs ls.viewBox? why not simply using edit box? If is using edit box then \\n    3ce 3htm Ctrl-S save the entire page can also save the mode flag and read-only flag\\n    that are not existing in view box. 應該用個 DIV 來放 eb, 必要時,例如要 dump 時, 整個 dump 好\\n    都搬進 outputbox 裡去。已經 open 的 field 都自動 save。搬進 outputbox 是為了方便一次全部 cls 掉。\\n    因為都已經 save 過了所以不怕 data lost.\\n    [x] Manually try this on 3htm --> 馬上發現問題點了, Chrome Ctrl-S save 起來的檔案沒有記錄到\\n        readonly mode saved 等 flag, 就這麼點問題。解法是擴充自定義的 flag attribute 來存放這些設定. \\n        那麼 localStorage hash format 要改嗎? 不用, localStorage/storage.all() 是個 hash\\n        格式照舊. \\n        js> $(\\\".ebmodeflag\\\",$(\\\".eb\\\"))[0].outerHTML \\\\ ==> <input type=\\\"checkbox\\\" class=\\\"ebmodeflag\\\" disabled=\\\"disabled\\\"> (string)\\n        js> $(\\\".ebmodeflag\\\",$(\\\".eb\\\")).attr(\\\"flag\\\") \\\\ ==> undefined (undefined)\\n        js: $(\\\".ebmodeflag\\\",$(\\\".eb\\\")).attr(\\\"flag\\\",\\\"true\\\")\\n        js> $(\\\".ebmodeflag\\\",$(\\\".eb\\\")).attr(\\\"flag\\\") \\\\ ==> true (string)\\n        js: $(\\\".ebmodeflag\\\",$(\\\".eb\\\")).attr(\\\"flag\\\",\\\"false\\\")\\n        js> $(\\\".ebmodeflag\\\",$(\\\".eb\\\")).attr(\\\"flag\\\") \\\\ ==> false (string)\\n    [x] 到處都是重複的 ~attr(\\\"flag\\\",true/false) 這很笨, textarea 本來就需要處理了, 不如弄個 save comand \\n        集中處理就好了，最後發個 alert() 讓 user 自己 press Ctrl-S \\n        \\\\ 可能這樣就可以了\\n        js: $(\\\"textarea\\\").each(function(){this.innerText=this.value})\\n        <js> \\n            $(\\\".eb\\\").each(function(){\\n                $(\\\".ebmodeflag\\\",    this).attr(\\\"flag\\\",       $(\\\".ebmodeflag\\\",    this)[0].checked);\\n                $(\\\".ebreadonlyflag\\\",this).attr(\\\"flag\\\",       $(\\\".ebreadonlyflag\\\",this)[0].checked);\\n                $(\\\".ebname\\\",        this).attr(\\\"placeholder\\\",$(\\\".ebname\\\",        this)[0].value);\\n\\t\\t\\t\\t\\n            })\\n        </js>\\n        --> 成功! 再寫一個把所有 field 都列出來的 loop 就可以了\\n    [ ] 不用 ls.viewBox 直接用 ed eb 牽涉到 storage.get(key, hahs) 都要改成可以接受\\n        指定的 hash table 而非認定 localStorage. 這還好, 當沒有指定時就當 localStorage\\n        即可,衝擊不大。 \\n        [x] 以上 [x] 3hta 不用改 [x] 3nw 同 3hta 也不用改, \\n                [x] 3htm 可能只須改這個 common 部分 [x] 3ce 沿用 3hta 的,無可改。\\n        [x] tbd_local-storage-field-editable? tbd_(eb.read) of ls.f are T.B.D. waiting for the \\n            storage.get() <--- 很簡單, 一下就改好成功了!\\n\\n[ ] Apple Safari 上跑 jeforth.3htm failed to read f/jeforth.f \\n[ ] Run a local storage field from within another field does not work. Why?\\n    --> 可以呀!! 從 autoexec 裡去 run a 看看 --> Doesn't run at all from and only from within autoexec !!\\n    RI: Now I know the \\\"run fieldname\\\" command is asynchronous!! \\n        The 'stop' command was run before the indicated field, so nothing was run.\\n    --> Try to run a field that \\n        prints the now, and the following command prints now too, let's see .... Shit!!\\n        True !!! \\n    [ ] No no no, run command should not behave this way. How to resolve that?\\n        --> how about readTextFile ? if it is not asynchronous then why 'run'?\\n            --> Yeap, readTextFile is synchronous, no problem.\\n    --> 'run' is now asynchronous <---- problem. \\n    [x] The 'autoexec' problem workaround is NOT to use stop command in it <--- Bingo!!\\n\\n\\n \",\"mode\":true,\"readonly\":false}","font-size for X1 Yoga 3HTA":"{\"doc\":\"<o> <h3> font-size for X1 Yoga 3HTA </h3></o> drop\\n\\\\ Font size of outputbox, inputbox, and edit box -- For X1 Yoga 3HTA \\n( Outputbox font size ) js: outputbox.style.fontSize=\\\"1em\\\"\\n( Inputbox font size  ) js: inputbox.style.fontSize=\\\"1em\\\"\\n( Edit box font size  ) eb-style <text>\\n                        .eb .box { width:90%; font-size:1.5em; /* filename */ } \\n                        .eb .box, .eb .ebhtmlarea { border:1px solid black; }\\n                        .eb .ebtextarea { font-size:1.5em }\\n                        .eb input { font-size:0.7em /* buttons */ }\\n                        .eb p { display:inline; }\\n                        .eb .ebname { font-size: 1em; }\\n                        </text> js: $(\\\"#ebstyle\\\")[0].innerHTML=pop() \\\\ 直接修改 ebstyle \\n\\n\\n\\n\",\"mode\":true,\"readonly\":false}","用 currentStyle 查 HTML element 的 style":"{\"doc\":\"\\n<h4>* Chrome browser does not have currentStyle property, IE and HTA only</h4><p><p><p><p><p><p>&gt; <strong>js&gt; outputbox.currentStyle .<br>[object MSCurrentStyleCSSProperties]</strong> OK <br>&gt; js&gt; outputbox.currentStyle obj&gt;keys .<br>blockDirection,clipBottom,clipLeft,clipRight,clipTop,hasLayout,accelerator,backgroundPositionX,backgroundPositionY,behavior,filter,imeMode,layoutFlow,layoutGrid,layoutGridChar,layoutGridLine,layoutGridMode,layoutGridType,lineBreak,msBlockProgression,msInterpolationMode,scrollbar3dLightColor,scrollbarArrowColor,scrollbarBaseColor,scrollbarDarkShadowColor,scrollbarFaceColor,scrollbarHighlightColor,scrollbarShadowColor,scrollbarTrackColor,styleFloat,textAutospace,textJustifyTrim,textKashida,textKashidaSpace,writingMode,zoom,getAttribute,removeAttribute,setAttribute,alignmentBaseline,background,backgroundAttachment,backgroundClip,backgroundColor,backgroundImage,backgroundOrigin,backgroundPosition,backgroundRepeat,backgroundSize,baselineShift,border,borderBottom,borderBottomColor,borderBottomLeftRadius,borderBottomRightRadius,borderBottomStyle,borderBottomWidth,borderCollapse,borderColor,borderLeft,borderLeftColor,borderLeftStyle,borderLeftWidth,borderRadius,borderRight,borderRightColor,borderRightStyle,borderRightWidth,borderSpacing,borderStyle,borderTop,borderTopColor,borderTopLeftRadius,borderTopRightRadius,borderTopStyle,borderTopWidth,borderWidth,bottom,boxShadow,boxSizing,captionSide,clear,clip,clipPath,clipRule,color,content,counterIncrement,counterReset,cssFloat,cssText,cursor,direction,display,dominantBaseline,emptyCells,fill,fillOpacity,fillRule,font,fontFamily,fontSize,fontSizeAdjust,fontStretch,fontStyle,fontVariant,fontWeight,glyphOrientationHorizontal,glyphOrientationVertical,height,kerning,left,length,letterSpacing,lineHeight,listStyle,listStyleImage,listStylePosition,listStyleType,margin,marginBottom,marginLeft,marginRight,marginTop,marker,markerEnd,markerMid,markerStart,mask,maxHeight,maxWidth,minHeight,minWidth,msTransform,msTransformOrigin,opacity,orphans,outline,outlineColor,outlineStyle,outlineWidth,overflow,overflowX,overflowY,padding,paddingBottom,paddingLeft,paddingRight,paddingTop,pageBreakAfter,pageBreakBefore,pageBreakInside,parentRule,pointerEvents,position,quotes,right,rubyAlign,rubyOverhang,rubyPosition,stopColor,stopOpacity,stroke,strokeDasharray,strokeDashoffset,strokeLinecap,strokeLinejoin,strokeMiterlimit,strokeOpacity,strokeWidth,tableLayout,textAlign,textAlignLast,textAnchor,textDecoration,textIndent,textJustify,textOverflow,textTransform,textUnderlinePosition,top,unicodeBidi,verticalAlign,visibility,whiteSpace,widows,width,wordBreak,wordSpacing,wordWrap,zIndex,getPropertyPriority,getPropertyValue,item,removeProperty,setProperty OK <br>&gt; js&gt; outputbox.currentStyle.cssText .&nbsp; \\\\ 沒這東西<br> OK <br>&gt; js&gt; outputbox.currentStyle.backgroundColor . \\\\ Style 的 attribute 都有<br>#f0f0f0 OK&nbsp; <br>&gt; js&gt; outputbox.currentStyle.backgroundColor=\\\"#808080\\\" \\\\ 不能改動<br>JavaScript error : NoModificationAllowedError<br>OK <br>&gt; js&gt; outputbox.currentStyle.fontSize .<br>1em OK&nbsp;&nbsp;&nbsp;&nbsp; </p></p></p><p><p><p>&nbsp;</p></p></p></p><p><p><p><p>&nbsp;</p></p></p></p></p><p><p><p><p><p><br>&nbsp;</p></p></p></p></p></p><p><p><p><p><p><p><br>&nbsp;</p></p><p><p>如果用 HTML 標準的 style property 則經常看不到東西, 因為 style 是層層噴塗上去的, 光看自己這一層不一定有東西。<br></p></p></p></p></p></p>\",\"mode\":false,\"readonly\":false}","Retrieve localstorage.html for 3htm 3ce":"{\"doc\":\": read-localstorage.html ( \\\"pathname\\\" -- ObjJquery ) \\\\ Read localstorage.html\\n            readTextFile ( \\\"html\\\" ) \\n            remove-script-from-HTML remove-style-from-HTML\\n            :> replace(/id=\\\"inputbox\\\"/g,'id=\\\"input_box\\\"')\\n            :> replace(/id=\\\"outputbox\\\"/g,'id=\\\"output_box\\\"')\\n            :> replace(/id=\\\"endofinputbox\\\"/g,'id=\\\"endofinput_box\\\"')\\n            :> replace(/class=\\\"console3we\\\"/g,'class=\\\"ls_hash\\\"')\\n            </o> drop \\\\ The entire localstorage.html in outputbox\\n            js> $(\\\".box\\\",$(\\\".ls_hash\\\")) ( array ) \\\\ array of field elements\\n            ; \\n            /// The entire localstorage.html will be shown on outputbox.\\n            /// The result is an jQuery object of field elements\\n\\n: element>field ( element -- obj ) \\\\ Translate a local storage DOM element to object\\n    {} ( element obj )\\n    js: tos().name=$(\\\".ebname\\\",tos(1)).attr(\\\"placeholder\\\")\\n    js: tos().readonly=$(\\\".ebreadonlyflag\\\",tos(1)).attr(\\\"flag\\\")\\n    js> tos().mode=$(\\\".ebmodeflag\\\",tos(1)).attr(\\\"flag\\\")\\n    char true == if js: tos().doc=$(\\\".ebtextarea\\\",tos(1))[0].value\\n    else js: tos().doc=$(\\\".ebhtmlarea\\\",tos(1))[0].innerHTML then\\n    nip ;\\nstop\\nchar playground\\\\jeforth.3ce.html read-ls.html ( objQuery ) \\ndup :> [0] element>field ( obj ) (see) ( objQuery ) \\n\\n<comment>\\n[x] 直接從 Chrome Ctrl-S save 起來的 Edit boxes 沒有必要的線索，試試用 standardize-eb 先\\n    跑過 --> 對了!! --> \\n[ ] 承上，所以 edit box save 之前都應該先 standardize-eb 一下。本來就有處裡 textarea 的\\n    value 與 innerHTML 不一致的問題，該 command 保留但研究看是否應併進 standardize。\\n[x] Note, 只能讀取 jeforth.3we folder 下的檔案。\\n    char playground\\\\jeforth.3ce.html read-ls.html ( objQuery ) \\n    如上，移到 playground 證實的確如此。\\n\\n\\\\ 這行已經成功把整個 localstorage.html archive 檔讀成一個 jQuery object: \\n\\\\     char playground\\\\jeforth.3ce.html read-ls.html \\n\\\\ js> $(\\\"*\\\",tos()).length . \\\\ ==> 16 OK 但是不能直接 (see) 那怎麼去觀察它?\\n\\\\ 既然是 jQuery object 就用 each(function(){}) 來處理吧!\\n\\\\ 以下這段 code 很成功地把 read-ls.html 取得的整個 jQuery object 以 outerHTML 的形式\\n\\\\ 印出來了。\\n<js> \\n$(\\\"*\\\",tos()).each(function(){\\n    type(\\\"-------------------------\\\\n\\\");\\n    type($(this)[0].outerHTML);\\n    type(\\\"\\\\n\\\");\\n});\\n</js> \\n\\n</comment>\",\"mode\":true,\"readonly\":false}","font-size for T550":"{\"doc\":\"\\\\ Font size of outputbox, inputbox, and edit box -- For X1 Yoga 3HTA \\n( Outputbox font size ) js: outputbox.style.fontSize=\\\"1.5em\\\"\\n( Inputbox font size  ) js: inputbox.style.fontSize=\\\"1.5em\\\"\\n( Edit box font size  ) eb-style <text>\\n                        .eb .box { width:90%; font-size:1em; /* filename */ } \\n                        .eb .box, .eb .ebhtmlarea { border:1px solid black; }\\n                        .eb .ebtextarea { font-size:1.1em }\\n                        .eb input { font-size:0.7em /* buttons */ }\\n                        .eb p { display:inline; }\\n                        .eb .ebname { font-size: 1em; }\\n                        </text> js: $(\\\"#ebstyle\\\")[0].innerHTML=pop() \\\\ 直接修改 ebstyle \\n\\n\\n\\n\",\"mode\":true,\"readonly\":false}","list-jqo":"{\"doc\":\": jqo-list ( jQobj -- ) \\\\ List localstorage.html fields in the given jQuery object\\n  ( jqo ) js> tos().length ( jqo length ) \\n  ?dup if dup for dup r@ - \\n    ( jqo COUNT i ) js> tos(2)[tos()] ( jqo COUNT i jqo[i] ) \\n    element>field  ( jqo COUNT i filedObj ) \\n    swap . space :> name . cr \\n  ( COUNT ) next drop then drop ;\\n\\n: jqo-restore ( jQobj -- ) \\\\ Restore localstorage.html jquery object to local storage\\n  ( jqo ) js> tos().length ( jqo length ) \\n  ?dup if dup for dup r@ - \\n    ( jqo COUNT i ) js> tos(2)[pop()] ( jqo COUNT jqo[i] ) \\n    element>field  ( jqo COUNT fieldObj ) dup :> name ( jqo COUNT fieldObj name )\\n    js: storage.set(pop(),pop())    \\n  ( jqo COUNT ) next drop then drop ;\\n\\n\\nstop\\n\\n> jq :> [3] element>field ( obj ) (see) ( objQuery )\\n{\\n    \\\"name\\\": \\\"月梅股 2016-07-21\\\",\\n    \\\"readonly\\\": \\\"false\\\",\\n    \\\"codemode\\\": \\\"false\\\",\\n    \\\"doc\\\": \\\"<textarea>2016 Stock Evaluate 3514昱晶 今年開始賺錢了! 月梅可能又對了。</textarea><hr>\\\"\\n} OK Input box EditMode = true\\nInput box EditMode = false\\n\\n: test ?dup if dup for dup r@ - ( COUNT i ) . space ( COUNT ) next drop then ;\\n      5 test ==> 0 1 2 3 4\",\"mode\":true,\"readonly\":false}","pruning":"{\"name\":\"pruning\",\"readonly\":false,\"codemode\":\"true\",\"doc\":\"\\\\ Make the target page editable for pruning. 把 target page 搞成 editable 以便修剪。\\nactive-tab :> id tabid! <ce> document.getElementsByTagName(\\\"body\\\")[0].contentEditable=true </ce>\\n\",\"mode\":true}","lab":"{\"name\":\"lab\",\"readonly\":false,\"codemode\":\"true\",\"doc\":\": read-ls.html ( \\\"pathname\\\" -- ObjJquery ) \\\\ Read localstorage.html\\n            readTextFile ( \\\"html\\\" ) \\n            remove-script-from-HTML remove-style-from-HTML\\n            :> replace(/id=\\\"inputbox\\\"/g,'id=\\\"input_box\\\"')\\n            :> replace(/id=\\\"outputbox\\\"/g,'id=\\\"output_box\\\"')\\n            :> replace(/id=\\\"endofinputbox\\\"/g,'id=\\\"endofinput_box\\\"')\\n            :> replace(/class=\\\"console3we\\\"/g,'class=\\\"ls_hash\\\"')\\n            </o> drop \\\\ The entire localstorage.html in outputbox\\n            js> $(\\\".box\\\",$(\\\".ls_hash\\\")) ( array ) \\\\ array of field elements\\n            ; \\n            /// The entire localstorage.html will be shown on outputbox.\\n            /// The result is an jQuery of field elements\\n\\n: element>field ( element -- obj ) \\\\ Translate a local storage DOM element to object\\n    {} ( element obj )\\n    js: tos().name=$(\\\".ebname\\\",tos(1)).attr(\\\"placeholder\\\")\\n    js: tos().readonly=$(\\\".ebreadonlyflag\\\",tos(1)).attr(\\\"flag\\\")\\n    js> tos().mode=$(\\\".ebmodeflag\\\",tos(1)).attr(\\\"flag\\\")\\n    char true == if js: tos().doc=$(\\\".ebtextarea\\\",tos(1))[0].value\\n    else js: tos().doc=$(\\\".ebhtmlarea\\\",tos(1))[0].innerHTML then\\n    nip ;\\nstop\\nchar playground/localstorage2.html  read-ls.html ( objQuery )\\ndup :> [0] element>field ( obj ) (see) ( objQuery ) \\n\\n\\n<comment>\\n[ ] 3hta's local storage 目前因為 debug localstorage.html 而被弄亂了, 從 3ce 來的 localstorage.html 應該先整理成安全的內容。\\n    --> playground/localstorage2.html 弄好了, 所有在 DIV console3we 裡面的 class=box DIV 就是一個 field. 只留兩個把其他都\\n        改成 class=\\\"boxxx\\\" 即可。 field name 改掉了所以不會傷到真正的內容。 \\n    --> 把 3hta 修好,邊開法要用到, 必須保持可用。\\n[x] 直接從 Chrome Ctrl-S save 起來的 Edit boxes 沒有必要的線索，試試用 standardize-eb 先\\n    跑過 --> 對了!! --> dump-all command does it now. \\n[x] 承上，所以 edit box save 之前都應該先 standardize-eb 一下。本來就有處裡 textarea 的\\n    value 與 innerHTML 不一致的問題，該 command 保留但研究看是否應併進 standardize。\\n     --> dump-all command does it now. \\n[x] Note, 只能讀取 jeforth.3we folder 下的檔案。\\n    char playground\\\\jeforth.3ce.html read-ls.html ( objQuery ) \\n    如上，移到 playground 證實的確如此。 --> 移到 private 更好。\\n\\n\\\\ 這行已經成功把整個 localstorage.html archive 檔讀成一個 jQuery object: \\n\\\\     char playground\\\\jeforth.3ce.html read-ls.html \\n\\\\ js> $(\\\"*\\\",tos()).length . \\\\ ==> 16 OK 但是不能直接 (see) 那怎麼去觀察它?\\n\\\\ 既然是 jQuery object 就用 each(function(){}) 來處理吧!\\n\\\\ 以下這段 code 很成功地把 read-ls.html 取得的整個 jQuery object 以 outerHTML 的形式\\n\\\\ 印出來了。\\n<js> \\n$(\\\"*\\\",tos()).each(function(){\\n    type(\\\"-------------------------\\\\n\\\");\\n    type($(this)[0].outerHTML);\\n    type(\\\"\\\\n\\\");\\n});\\n</js> \\n\\n</comment>\",\"mode\":true}","ad":"{\"name\":\"ad\",\"readonly\":false,\"codemode\":\"true\",\"doc\":\"\\\\ Remove all annoying floating ad boxes. 刪除所有惱人的廣告框。\\nactive-tab :> id tabid! <ce>\\nvar divs = document.getElementsByTagName(\\\"div\\\");\\nfor (var i=divs.length-1; i>=0; i--){\\n  if(divs[i].style.position){\\n    divs[i].parentNode.removeChild(divs[i]);\\n  }\\n}\\nfor (var i=divs.length-1; i>=0; i--){\\n  if(parseInt(divs[i].style.width)<600){ // <---- 任意修改\\n    divs[i].parentNode.removeChild(divs[i]);\\n  }\\n}\\n</ce>\\n\",\"mode\":true}","Edit box style for 3ce on my X1 Yoga":"{\"doc\":\"\\\\ ls.f local storage edit box style for 3ce on my X1 Yoga\\n<text>\\n.eb .box { width:90%; font-size:1em; /* filename */ } \\n.eb .box, .eb .ebhtmlarea { border:1px solid black; }\\n.eb .ebtextarea { font-size:1em }\\n.eb input { font-size:0.7em /* buttons */ }\\n.eb p { display:inline; }\\n.eb .ebname { font-size: 1em; }\\n</text> js: $(\\\"#ebstyle\\\")[0].innerHTML=pop()\",\"mode\":true,\"readonly\":false}"}