{"autoexec":"{\"doc\":\"<comment>\\n\\njs: outputbox.style.fontSize=\\\"1.5em\\\"\\njs: inputbox.style.fontSize=\\\"1.5em\\\"\\n\\njs> vm.appname char jeforth.3hta = [if] [else]\\n    .( Launch the briefing ) cr\\n    <o> <iframe name=\\\"An introduction to jeforth.3ce\\\" width=\\\"96%\\\" height=\\\"1000\\\" align=\\\"center\\\" src=\\\"http://note.youdao.com/share/?id=79f8bd1b7d0a6174ff52e700dbadd1b2&amp;type=note\\\" frameBorder=\\\"1\\\" marginWidth=\\\"1\\\" marginHeight=\\\"1\\\" scrolling=\\\"Yes\\\"> </iframe></o> drop\\n    cr cr \\n[then]\\n\\ncls\\n.( Execute the 'list' command that lists all local storage fields ) cr\\nlist\\n\\n\\n</comment>\",\"mode\":true,\"readonly\":false}","Play with numeric.js":"{\"doc\":\"\\ncls \\n\\\\ Linear algebra example. We start with a matrix.\\n<js>\\nvar A = [[1,2,3],\\n         [4,5,6],\\n         [7,3,9]]; A </jsV> value A\\n\\n\\\\ Let's also make a vector.\\n<js> var x = [3,1,2]; x </jsV> value x\\n\\n\\\\ Matrix-vector product.  b = A (.) x\\n<js> var b = numeric.dot(vm.g.A,vm.g.x); b </jsV> value b b (see)\\n\\n\\\\ Matrix inverse.  ~A \\n<js> var Ainv = numeric.inv(vm.g.A); Ainv </jsV> value Ainv \\nAinv (see)\\n\\n\\\\ Let's check it:   ~A (.) b = x Bingo!!!!\\n<js> numeric.dot(vm.g.Ainv,vm.g.b); </jsV> (see)\\n\\n\\\\ Determinant\\n<js> numeric.det(vm.g.A); </jsV> cr tib. \\n\\n\\\\ Sin wave\\n<js> var x = numeric.linspace(0,6.3,25); x </jsV> to x x (see)\\n\\n<js> var y = numeric.sin(vm.g.x); y </jsV> value y y (see)\\n\\n\\n\\n\\nstop\\njs> numeric tib.\\n\\nstop\\njs> vm.appname==\\\"jeforth.3hta\\\" [if] char js/numeric-1.2.6.js\\n[else] char http://www.numericjs.com/lib/numeric-1.2.6.js [then]\\nreadTextFile \\\\ 先讀取 .js 檔, 但不能直接用\\n<text> \\nwindow.numeric = numeric;  // 先對 source 做一點必要的加工, 把 numeric 掛上 global \\n</text> + </js> \\\\ 然後才執行\\t\\n\\nstop\\n\\\\ Also hosted on BootCDN.cn\\n\\\\ http://cdn.bootcss.com/numeric/1.2.6/numeric.js\\n\\n\\\\ These lines works fine! Test ok on 3ce, 3hta ADO reads only local files\\n\\\\ so the path should be only \\\"js/numeric-1.2.6.js\\\",\\n\\nchar     http://localhost:8888/js/numeric-1.2.6.js     readTextFile tib.\\nchar http://www.numericjs.com/lib/numeric-1.2.6.js     readTextFile tib.\\nchar http://www.numericjs.com/lib/numeric-1.2.6.min.js readTextFile tib.\\n\\n\\n\",\"mode\":true,\"readonly\":false}","Log 2016-06-12 10:14:38":"{\"doc\":\"[x] ls.f should reveal the local storage format --> ed command is the hint also\\n    eb.read eb.save commands.\\n\\n[x] 舊筆記 : \\\"ls.f (ed) 要改成 ( hash \\\"fieldname\\\" -- ) <-- No, 已經牽連太深了。 ls.dump 另外做介\\n    面而不引用 ed\\\" <---- 該介面叫做 view box 簡稱 vb 結果與 visual basic 太像了. (vb) vb.load 改名\\n    為 ls.viewBox ls.viewBoxLoad 比較好。\\n[x] ls.dump w/o following argument in TIB to list localStorage of all, because \\n    js> storage.all() virtualizes localStorage very well.\\n[x] (ls.dump) reads localstorage.json file directly now. Should break down to \\n    read-json ( filename -- jsonObj ) and (ls.dump) ( jsonObj filename -- )\\n\\n[x] 擴充 ls.dump 當隨後沒有給 filename 時就 dump localStorage <--- 3htm, 3ce 的需要改良\\n    所以 help 要加強\\n\\n[x] Study how to *write* files to local disk on super-chrome jeforth.3htm\\n    --> 先前有找到過一個例子, 可以把網頁上的 pictures drag-drop 一下就 save 成 local file\\n        Ynote: \\\"jeforth 研究 Chrome extension 存檔到本地 disk 的方法\\\" the thing is \\\"XMLHttpRequest\\\" \\n    --> Study XMLHttpRequest @ http://www.w3school.com.cn/xml/xml_http.asp\\n        <js> var x =new XMLHttpRequest(); x </jsV> constant xmlhttp // ( -- obj ) XMLHttpRequest object\\n        xmlhttp :: open(\\\"GET\\\",\\\"a.html\\\",true)\\n        xmlhttp :: send(null)\\n        try on 3hta ... error : access denied\\n        try on jeforth.3nw --> it works! \\n    --> See log on 3nw \\\"Study XMLHttpRequest object 2016-07-06\\\" \\n        XMLHttpRequest 可以 read 檔案, 但是 write 應該是靠 server 端做的吧! 那還不如用 3nw。\\n        [ ] 我以前研究過 Web server 端的程式 on 3nd, it's time to review.\\n    [/] 想要 write file 腳邊的目的是 sync 3htm 3ce 的 localstorage log. 3hta, 3nw 已經靠 GitHub\\n        做到這點了。既然是為了這個目的, 可以利用 Chrome browser 本有的 save 網頁功能, 如此只需 read \\n        local file 的能力就夠了, 3ce super_chrome 3htm 都可以, 那就解決了呀!\\n\\n[x] snapshot command does not capture textareas <-- bug!! \\n    Need to copy textarea.value into innerHTML\\n    --> (eb.read) 的 help 有紀錄，早就發現有這個問題了。現在腦子裡一點印象都沒有。\\n    --> textarea.value->innertext 是解決 textarea 的內容之問題。\\n    [x] try this: js> outputbox textarea.value->innertext snapshot <--- B i n g o ! ! \\n        --> so snapshot should use this solution.\\n        --> 早就有了, 但是寫錯了! 訂正 OK。\\n[/] stop() 是個 DOM 的 native code!! \\n[ ] Youtube presentation of numeric.js\\n[ ] 準備 release master 新版, search \\\"kvm.minor_version\\\"\\n    全部加 200 代表 GitHub master release 的版號。\\n    [x] jeforth.3nd.js --> version 2 -> 202\\n    [x] jeforth.3nw.html, /package.json -> version 22 -> 222\\n    [x] jeforth.3htm.js --> to be version 2 now -> 202\\n    [x] jeforth.3ce.js(3ce extension pages)-> 202\\n    [x] jeforth.3ce, ce.f(Target page) -> 202\\n    [x] jeforth.3ce, background.js -> 202\\n    [x] jeforth.hta --> <HTA> tag. to be version 3 now -> 203 \\n    [ ] GitHub read me should feature the published 3ce Chrome extension.\\n    [ ] README.md 上的 demo 也要改寫好一點。最好能有浮動 console3we 框。\\n        --> 先把結構改好, link 出去的內容先弄成 under constructing. 日起有功,穩步推進。\\n[ ] 利用 Chrome browser 本有的 save 網頁功能 save 3ce 3htm 的 localstorage.html\\n    --> study localstorage.html ... 結果所有的 textarea 都是空的, 要先這樣一下:\\n        <js> $(\\\"textarea\\\").each(function(){this.innerText = this.value})</js>\\n        就好了，可以 Ctrl-S 把所有內容都 save 成 ~.html 檔了。\\n    --> 1. read localstorage.html as a text file by readTextFile\\n        2. remove script, style, rename id=outputbox, id=inputbox by regular expression \\n            cls char c:\\\\Users\\\\hcche\\\\Downloads\\\\localstorage.html readTextFile\\n            remove-script-from-HTML remove-style-from-HTML\\n            :> replace(/id=\\\"inputbox\\\"/g,'id=\\\"input_box\\\"')\\n            :> replace(/id=\\\"outputbox\\\"/g,'id=\\\"output_box\\\"')\\n            :> replace(/id=\\\"endofinputbox\\\"/g,'id=\\\"endofinput_box\\\"')\\n            :> replace(/class=\\\"console3we\\\"/g,'class=\\\"ls_hash\\\"')\\n           這樣就搞定了。\\n        3. </o> the entire string and get the element object.\\n        4. start copy each of every view box to localstorage fields\\n            > js> $(\\\".ls_hash\\\").length tib. \\\\ ==> 1 OK \\n            > js> $(\\\".box\\\",$(\\\".ls_hash\\\")).length tib. \\\\ ==> 6 OK \\n            > js> $(\\\".vbpathname\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() tib. \\\\ ==> localStorage OK \\n            > js> $(\\\".vbpathname\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() \\\\ ==> localStorage (string)\\n            > js> $(\\\".vbfieldname\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() \\\\ ==> sourcecode (string)\\n            > js> $(\\\".vbtextarea\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() \\\\ ==> \\\\ \\\"jeforth.3ce 讀取「臺灣銀行」的「除權除息表」..\\n            > js> $(\\\".vbhtmlarea\\\",$(\\\".box\\\",$(\\\".ls_hash\\\"))[0]).html() \\\\ ==>  (string)\\n\\n[ ] 發現 ls.f edit box 的 style 每個 instance 都重複定義, 要處理嗎?\\n        <div class=\\\"vb\\\">\\n            <style type=\\\"text/css\\\">\\n                .vb .box { width:90%; }\\n                .vb .box, .vb .vbhtmlarea { border:1px solid black; }\\n                .vb p { display:inline; } \\n\\t\\t\\t\\t.vb .vbname { font-size: 1.1em; }\\n            </style>\\n            <div class=\\\"box\\\">\\n        ...\\n\\n[ ] why ls.f needs ls.viewBox? why not simply using edit box? If is using edit box then \\n    3ce 3htm Ctrl-S save the entire page can also save the mode flag and read-only flag\\n    that are not existing in view box. 應該用個 DIV 來放 eb, 必要時,例如要 dump 時, 整個 dump 好\\n    都搬進 outputbox 裡去。已經 open 的 field 都自動 save。搬進 outputbox 是為了方便一次全部 cls 掉。\\n    因為都已經 save 過了所以不怕 data lost.\\n\\n\\n[ ] Apple Safari 上跑 jeforth.3htm failed to read f/jeforth.f \\n\",\"mode\":true,\"readonly\":false}"}